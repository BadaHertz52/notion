@import "./common";

.editableBlock {
  box-sizing: border-box;
  position: relative;
  width: 100%;
  height: min-content;
  margin: {
    top: 18px;
    bottom: 1px;
  }
  display: flex;
  flex-direction: column;
  div {
    width: inherit;
    height: inherit;
  }
  .listItem-marker,
  .comments-bubble {
    width: fit-content;
  }
}

.mainBlock {
  display: flex;
  justify-content: space-between;
  .mainBlock__block {
    display: flex;
    align-items: center;
    width: 100%;
    position: relative;
  }
  width: 100%;
}
.mainBlock.on {
  border-top: 5px solid #8ae2ff;
}
.subBlock-group {
  padding: 0;
  padding-left: 20px;
}
[contenteditable] {
  outline: 0px solid transparent;
}
.editableBlock,
.block-quick-menu button {
  font-size: inherit;
  line-height: inherit;
}

.block-quick-menu {
  display: flex;
  position: absolute;
  padding-right: 5px;
  z-index: 5;
  .block-quick-menu__btn-container {
    svg {
      color: $itemSvg;
      fill: $itemSvg;
    }

    font : {
      size: 1.2rem;
      weight: bolder;
    }
  }
}

.block-quick-menu button,
.toggle.block .left {
  &:hover {
    background-color: $itemHover;
  }
}
.editableBlock .editable {
  width: max-content;
}
.editable {
  white-space: normal;
  word-break: break-all;
  overflow: hidden;
  user-select: text;
  line-height: normal;
  font : {
    size: inherit;
  }
  &:focus-visible {
    outline: none;
  }
}
.frame .editable:empty {
  &:hover,
  &:focus {
    &::after {
      content: attr(placeholder);
      color: $mud;
    }
  }
}
.frame.web {
  .selected,
  .editableBlock .selected a:link,
  .editableBlock a:link .selected {
    background-color: #bde6f1;
    .bg_default,
    .bg_yellow,
    .bg_blue,
    .bg_green,
    .bg_grey,
    .bg_pink {
      background-color: #bde6f1;
    }
  }
}
.frame.mobile {
  .selected,
  .editableBlock .selected a:link,
  .editableBlock a:link .selected {
    background-color: #7dbcfc8a;
    .bg_default,
    .bg_yellow,
    .bg_blue,
    .bg_green,
    .bg_grey,
    .bg_pink {
      background-color: #7dbcfc8a;
    }
  }
}

.bg_default {
  background-color: none;
}
.bg_grey {
  background-color: #e0e0e0;
}
.bg_yellow {
  background-color: #fff9c4;
}
.bg_green {
  background-color: #ebffd7;
}
.bg_blue {
  background-color: #e3f2fd;
}
.bg_pink {
  background-color: #fce4ec;
}
.color_default {
  color: $black;
}
.color_grey {
  color: #bdbdbd;
}
.color_orange {
  color: #ffa726;
}
.color_green {
  color: #00701a;
}
.color_blue {
  color: #1565c0;
}
.color_red {
  color: #d32f2f;
}
.bold {
  font-weight: bold;
}
.italic {
  font-style: italic;
}
.underline {
  text-decoration: underline;
}
.lineThrough {
  text-decoration: line-through;
}
document {
  z-index: 0;
}
.editable {
  a:link,
  a:visited,
  a:active {
    color: grey;
    text-decoration: underline;
    cursor: pointer;
  }
}
.h1 .mainBlock .editable,
.h2 .mainBlock .editable,
.h3 .mainBlock .editable {
  font-weight: 500;
}

.text.block {
  margin-top: 2px;
}
.left,
.block__contents,
.block-quick-menu {
  height: 18px;
}

.todo.block,
.todo_done.block,
.toggle.block,
.page.block {
  .left {
    width: 18px;
    margin-right: 4px;
    font-size: 15px;
  }
  svg {
    width: inherit;
    height: inherit;
    font-size: inherit;
  }
}
.page.block {
  padding: 5px;
  .page__icon-outBox,
  img {
    width: 18px;
    height: 18px;
  }
  .page__icon-outBox span {
    width: inherit;
    height: inherit;
  }
  .block__contents {
    display: flex;
    align-items: center;
  }
  .editable {
    border-bottom: 1px solid $mud;
  }
  &:hover {
    background-color: $itemHover;
  }
}
.todo_done.block {
  & > .mainBlock {
    text-decoration: line-through $darkgrey;
  }
  path {
    stroke: $darkgrey;
  }
}
.toggle.block {
  button {
    display: flex;
    align-items: center;
    fill: $itemSvg;
  }
  .subBlock-group {
    display: none;
  }
}
.toggle.on.block {
  .subBlock-group {
    display: block;
  }
}
.numberList,
.bulletList {
  display: flex;
  flex-direction: column;
}
.listItem {
  display: flex;
  flex-direction: column;
  margin-bottom: 8px;
  .subBlock-group {
    .editableBlock {
      margin-top: 8px;
    }
  }
  .listItem-marker {
    padding-right: 8px;
    svg {
      font-size: 11px;
    }
  }
}

.blockToggleBtn {
  svg {
    transform: rotate(0deg);
  }
}
.blockToggleBtn.on {
  svg {
    transform: rotate(90deg);
  }
}
.media.block .mainBlock__block {
  display: flex;
  align-items: center;
  justify-content: center;
}
.block__contents {
  &.on {
    padding: 5px;
    font-size: 1.2rem;
    -webkit-box-shadow: 0px 0px 10px 2px rgba(151, 151, 151, 0.486);
    box-shadow: 0px 0px 10px 2px rgba(151, 151, 151, 0.486);
    border-radius: 5px;
  }
  & > .moving-area {
    width: max-content;
    padding-right: 50px;
    max-width: 90vw;
    box-sizing: border-box;
  }
}
.media_block__contents {
  width: 100%;
  height: 100%;
}
.block__contents {
  width: 100%;
  height: fit-content;
  text-align: left;
  display: flex;
  align-items: flex-end;
}

.btn-addBlockFile {
  width: 100%;
  padding: 12px;
  background-color: $pistachioshell;
  color: $itemText;
  cursor: pointer;
  display: flex;
  align-items: center;
  &:hover {
    background-color: $itemHover;
  }
  span {
    margin-right: 6px;
    text-align: center;
    height: 1.2rem;
    font-size: inherit;
  }
  svg {
    font-size: 1.2rem;
  }
}
.block__contents input {
  border: none;
  width: 100%;
  &:focus {
    outline: none;
  }
}
.block__contents .btn-comment,
.block__contents .text_commentBtn {
  color: inherit;
  text-decoration: inherit;
  width: fit-content;
  z-index: 2;
  font : {
    size: inherit;
    weight: inherit;
  }
  border-bottom: 2px solid $commentHover;
  &:hover {
    background-color: $commentHover;
  }
}
.block__contents .btn-comment {
  background-color: $comment;
  padding: 4px;
}
.block__contents {
  .text_commentBtn {
    background-color: $comment_text;
    display: inline-block;
    position: relative;
    padding: 4px;
  }
}
.mainBlock,
.subBlock-group {
  display: flex;
  align-items: center;
}
.subBlock-group {
  flex-direction: column;
}
.comments-bubble .btn-comment {
  display: flex;
  padding: 3px;
  &:hover {
    background-color: $itemHover;
  }
  svg,
  span {
    color: $itemSvg;
    height: 1.1rem;
    line-height: 1.1rem;
    width: fit-content;
  }
  span {
    font-size: 12px;
  }
}
